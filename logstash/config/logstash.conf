input {
	tcp {
		type => "default"
		port => 5000
	}

	tcp {
		type => "cog_audit"
		port => 5001
	}
}

## Add your filters / logstash plugins configuration here

filter {
	if [type] == "cog_audit" {
		json { source => "message" }
		date { match => [ "timestamp", "ISO8601" ] }

		mutate {
			remove_field => [ "timestamp", "message", "port" ]
		}

    # ------------------------------------------------------------------------
		# Cog Pipeline Events
		# ------------------------------------------------------------------------

		if ("" in [pipeline_id]) {
			if [event] == "pipeline_initialized" {
				mutate { rename => { "data" => "source" }	}
			} else if [event] == "command_dispatched" {
				json_encode {
					source => "data.cog_env"
					target => "cog_env"
				}

				mutate {
					rename => {
						"[data][relay_id]"  => "relay_id"
						"[data][command_text]" => "command_text"
					}
					remove_field => [ "data" ]
				}
			} else if [event] == "pipeline_succeeded" {
				json_encode {
					source => "data"
					target => "result"
				}
				mutate { remove_field => [ "data" ] }
			} else if [event] == "pipeline_failed" {
				mutate {
					rename => { "[data][message]" => "result" }
					remove_field => [ "data" ]
				}
			} else {
				if [data] {
					json_encode { source => "data" }
				}
			}

			mutate {
				add_tag => [ "cog_pipeline" ]
			}
		}

    # ------------------------------------------------------------------------
		# HTTP Events
		# ------------------------------------------------------------------------

		if ("" in [request_id]) {
			mutate {
				add_tag => [ "cog_http" ]
				rename => {
					"[data][user]" => "[source][cog_user]"
					"http_method" => "[http][method]"
					"path" => "[http][path]"
					"[data][status]" => "[http][status]"
				}
				remove_field => [ "data" ]
			}
		}

		if [data] == "{}" {
			mutate { remove_field => [ "data" ]	}
		}
	}
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		index => "%{type}_indexer"
	}
}
